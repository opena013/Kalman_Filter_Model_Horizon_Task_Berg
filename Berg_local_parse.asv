function [final_table, started_game] = Berg_local_parse(subject, schedule, room_type, study)
    orgfunc = str2func(['Berg_' study '_organize']);

    started_game = 1;
    data = orgfunc(subject, schedule, room_type);

    if isstring(data.trial_number)
        data.trial_number =str2double(data.trial_number);
    end

    n_games     = length(unique(data.bandit_n));

    final_table = cell(1, n_games);
    for game_i = 1:80
        row = table ();
        row.expt_name = 'vertex';
        row.replication_flax = 0;
        row.SubjectID = str2double(subject);
        row.order = 0;
        row.age = 22;
        row.gender = 0;
        row.sessionNumber = 1;

        game = data(data.bandit_n == game_i - 1, :);
        if isempty(game)
            continue
        elseif strcmp(room_type, 'Dislike')
            game.left_reward = 100-game.left_reward;
            game.right_reward = 100-game.right_reward;

            game.left_mean(1) = 100-game.left_mean(1);
            game.right_mean(1) = 100-game.right_mean(1);
        end
        row.game = game_i;
        row.gamelength( size(game, 1));
        row.uc = sum(strcmp(game.force_pos, 'R'));
        row.m1 = game.left_mean(1);
        row.m2 = game.right_mean(1);
                
        responses = table();
        choices = table();
        reaction_times = table();

        for t = 1:9
    end
